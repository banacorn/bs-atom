// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

function toPaneContainer(obj) {
  var isDock = function (obj){{return obj.isVisible !== undefined}};
  if (isDock(obj)) {
    return /* Dock */Caml_chrome_debugger.variant("Dock", 0, [obj]);
  } else {
    return /* WorkspaceCenter */Caml_chrome_debugger.variant("WorkspaceCenter", 1, [obj]);
  }
}

function getActivePaneContainer(param) {
  return toPaneContainer(atom.workspace.getActivePaneContainer());
}

function paneContainerForURI(uri) {
  var match = atom.workspace.paneContainerForURI(uri);
  if (match !== undefined) {
    return toPaneContainer(Caml_option.valFromOption(match));
  }
  
}

function paneContainerForItem(item) {
  var match = atom.workspace.paneContainerForItem(item);
  if (match !== undefined) {
    return toPaneContainer(Caml_option.valFromOption(match));
  }
  
}

exports.toPaneContainer = toPaneContainer;
exports.getActivePaneContainer = getActivePaneContainer;
exports.paneContainerForURI = paneContainerForURI;
exports.paneContainerForItem = paneContainerForItem;
/* No side effect */
